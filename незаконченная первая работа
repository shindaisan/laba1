/*
Можно совеpшить путешествия, перечисленные в таблице 2.2. Любые две тpанспоpтные компании являются конкуpентами, если они обслуживают один и тот же маршрут.
Можно путешествовать из одного гоpода в дpугой, если
можно добраться из одного гоpода в дpугой чеpез пpомежуточный город
Запросы:
• Являются ли Амтpак и Пиплз конкуpентами?               запрос: competitor(amtrak,peoples)                        
• Какие компании дают возможность путешествовать из      запрос: can_travel(burlington, portland). 

Hью-Йоpка в Вашингтон?                                   запрос:
• Можно ли путешествовать из Биpлингтона в Поpтленд?     запрос: find_all_competitors(Competitors)
• Опpеделить всех конкуpентов.
*/
% компании и города:
company(amtrak).
company(transit).
company(greyhound).
company(peoples).
city(newyork).
city(portland).
city(boston).
city(burlington).
city(washington).
city(princeton).
% маршруты
amtrak(newyork,boston).
amtrak(boston,portland).
amtrak(newyork,washington).
transit(newyork,princeton).
greyhound(boston,portland).
peoples(newyork,washington).
peoples(burlington,newyork).
алгоритм для проверки возможности путешествия
 (amtrak(X, Y); transit(X, Y); peoples(X, Y); greyhound(X, Y)),
  write('Ты можешь путешествовать из '), write(X), write(' в '), write(Y), write('.'), nl.

can_travel(X, Y) :-
  (amtrak(X, Z); transit(X, Z); peoples(X, Z); greyhound(X, Z)),
  can_travel(Z, Y).
% маршрут компании амтрак 
path(amtrak, newyork, boston).
path(amtrak, boston, portland).
path(amtrak, newyork, washington).

 %маршрут компании транзит
path(transit, newyork, princeton).

%маршруты компании грейхаунд
path(greyhound, boston, portland).

% маршруты компании пиплз
path(peoples, newyork, washington).
path(peoples, burlington, newyork).
% алгоритм перебора всех конкурентных пар
competitors(Company1, Company2) :-
    Company1 \== Company2,
    path(Company1, CityA, CityB),
    path(Company2, CityA, CityB).
find_all_competitors(Competitors) :-
    findall((X,Y), competitors(X,Y), Competitors).

